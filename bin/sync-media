#!/usr/bin/env python

import argparse
import copy
import subprocess
import sys


HOSTS = {
    'arrakis': 'arrakis:/media/LaCIE/MUSIC/miquel/.',
    'miquelruiz': 'miquelruiz.net:/srv/music/.',
}

UP = 'up'
DOWN = 'down'
ACTIONS = [UP, DOWN]

LOCAL = '/home/mruiz/Music/.'
RSYNC = '/usr/bin/rsync'
OPTIONS = '-av'

CMD = [RSYNC, OPTIONS]

def actions():
    return ', '.join(ACTIONS)

def hosts():
    return ', '.join(HOSTS.keys())

def valid_host(host):
    if host not in HOSTS:
        msg = "Unknown host: '{}'\nValid ones: {}".format(host, hosts())
        raise argparse.ArgumentTypeError(msg)
    return host

def valid_action(action):
    if action not in ACTIONS:
        msg = "Unknown action: '{}'\nValid ones: {}".format(action, actions())
        raise argparse.ArgumentTypeError(msg)
    return action

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('action', help="Action: " + actions(),
                        type=valid_action)
    parser.add_argument('target', help="Target host: " + hosts(),
                        type=valid_host)
    parser.add_argument('--dry-run', action='store_true', default=False)
    args, rsync_args = parser.parse_known_args()

    cmd = copy.copy(CMD)
    if rsync_args:
        cmd.extend(rsync_args)

    if args.action == UP:
        cmd.extend((LOCAL, HOSTS[args.target]))

    elif args.action == DOWN:
        cmd.extend((HOSTS[args.target], LOCAL))

    else:
        raise Exception("Unknown action '{}'".format(args.action))

    if args.dry_run:
        print(cmd)
    else:
        subprocess.run(cmd, stdout=sys.stdout, stderr=sys.stderr)

if __name__ == '__main__':
    main()
